# IMPORTANT --> READ ME <-- IMPORTANT
#
# WHEN ADDING A NEW MAIN TAG BLOCK FOLLOW STRUCTURE BELOW.
# MAKE SURE TO SEPARATE EACH SUB BLOCK WITH "," AFTER THE CLOSING BRACKET.
# MAKE SURE INDENTATIONS ARE CORRECT FOR BETTER READABILITY.

# mainTag = {
#   {
#       subBlock1PropertyTag1 = string1
#       subBlock1PropertyTag2 = string2
#    },
#   {
#       subBlock2PropertyTag1 = string1
#       subBlock2PropertyTag2 = string2
#    },
# }

sensor = {
    {
        functionality = TemperatureCelsius
        sensorType = smarthome.domain.sensor.TemperatureCelsiusSensor
        serviceRepoCall = listInstantValuesForSensorID
        unit = Cº
    },
    {
        functionality = HumidityPercentage
        sensorType = smarthome.domain.sensor.HumidityPercentageSensor
        serviceRepoCall = listInstantValuesForSensorID
        unit = %
    },
    {
        functionality = Sunrise
        sensorType = smarthome.domain.sensor.SunriseSensor
        serviceRepoCall = listInstantLocationValuesForSensorID
        unit = Local time
    },
    {
        functionality = Sunset
        sensorType = smarthome.domain.sensor.SunsetSensor
        serviceRepoCall = listInstantLocationValuesForSensorID
        unit = Local time
    },
    {
        functionality = BinaryStatus
        sensorType = smarthome.domain.sensor.BinaryStatusSensor
        serviceRepoCall = listInstantValuesForSensorID
        unit = *
    },
    {
        functionality = ElectricEnergyConsumption
        sensorType = smarthome.domain.sensor.ElectricEnergyConsumptionSensor
        serviceRepoCall = listPeriodValuesForSensorID
        unit = kWh
    },
    {
        functionality = PowerAverage
        sensorType = smarthome.domain.sensor.PowerAverageSensor
        serviceRepoCall = listPeriodValuesForSensorID
        unit = W
    },
    {
        functionality = Scale
        sensorType = smarthome.domain.sensor.ScaleSensor
        serviceRepoCall = listInstantValuesForSensorID
        unit = %
    },
    {
        functionality = SolarIrradiance
        sensorType = smarthome.domain.sensor.SolarIrradianceSensor
        serviceRepoCall = listInstantLocationValuesForSensorID
        unit = W/m2
    },
    {
        functionality = SpecificTimePowerConsumption
        sensorType = smarthome.domain.sensor.SpecificTimePowerConsumptionSensor
        serviceRepoCall = listInstantValuesForSensorID
        unit = W
    },
    {
        functionality = WindSpeedAndDirection
        sensorType = smarthome.domain.sensor.WindSpeedAndDirectionSensor
        serviceRepoCall = listInstantValuesForSensorID
        unit = m/s;rad
    },
    {
        functionality = DewPointCelsius
        sensorType = smarthome.domain.sensor.DewPointCelsiusSensor
        serviceRepoCall = listInstantLocationValuesForSensorID
        unit = Cº
    },
    {
        functionality =
        sensorType = smarthome.domain.sensor.
        serviceRepoCall =
        unit =
    },
}
actuator = {
    {
        functionality = BlindSetter
        actuatorType = smarthome.domain.actuators.BlindSetterActuator
    },
    {
        functionality = DecimalSetter
        actuatorType = smarthome.domain.actuators.DecimalSetterActuator
    },
    {
        functionality = IntegerSetter
        actuatorType = smarthome.domain.actuators.IntegerSetterActuator
    },
    {
        functionality = Switch
        actuatorType = smarthome.domain.actuators.SwitchActuator
    },
}
